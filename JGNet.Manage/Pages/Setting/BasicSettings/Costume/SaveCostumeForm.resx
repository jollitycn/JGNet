<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column11.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column13.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="skinComboBoxBigClass.SelectedValue" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEBDRXJwLkNvcmUsIFZlcnNpb249MS4wLjAuMCwgQ3VsdHVyZT1u
        ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1udWxsDAMAAAD3AW1zY29ybGliLCBWZXJzaW9uPTIuMC4wLjAs
        IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5T
        dHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
        VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dLCBtc2NvcmxpYiwgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJl
        PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkMBAAAAI8BQ0VycC5Db3JlLCBW
        ZXJzaW9uPTEuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1dLCBtc2Nv
        cmxpYiwgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
        YzU2MTkzNGUwODkFAQAAAAxDRXJwLkNvc3R1bWU0AAAAHDxCdXlvdXRQcmljZT5rX19CYWNraW5nRmll
        bGQdPFN1cHBsaWVyTmFtZT5rX19CYWNraW5nRmllbGQaPEJyYW5kTmFtZT5rX19CYWNraW5nRmllbGQb
        PFN0b3JlQ291bnQ+a19fQmFja2luZ0ZpZWxkHDxTaXplTmFtZURJQz5rX19CYWNraW5nRmllbGQaPENs
        YXNzQ29kZT5rX19CYWNraW5nRmllbGQaPENsYXNzTmFtZT5rX19CYWNraW5nRmllbGQcPElzU2ltcGxl
        V2ViPmtfX0JhY2tpbmdGaWVsZApiaWdDbGFzc0lEGjxQaG90b1VybHM+a19fQmFja2luZ0ZpZWxkBG1f
        SUQGbV9OYW1lB21fUHJpY2ULbV9TYWxlUHJpY2ULbV9Db3N0UHJpY2UKbV9Qcm9wZXJ0eQhtX0NvbG9y
        cw9tX1NpemVHcm91cE5hbWULbV9TaXplTmFtZXMMbV9TdXBwbGllcklECW1fQnJhbmRJRAZtX1llYXII
        bV9TZWFzb24JbV9DbGFzc0lECW1fQmFyQ29kZQdtX1Bob3RvCW1fUmVtYXJrcwltX0lzVmFsaWQMbV9D
        cmVhdGVUaW1lC21fRW1EZXRhaWxzDm1fRW1TaG93T25saW5lCW1fRW1UaXRsZQ9tX0VtSXNSZWNvbW1h
        bmQPbV9FbU9ubGluZVByaWNlD21fUGZPbmxpbmVQcmljZQ1tX0VtVGh1bWJuYWlsEG1fUGhvdG9UaHVt
        Ym5haWwObV9FbU9ubGluZVRpbWUYbV9DYXJyaWFnZUNvc3RUZW1wbGF0ZUlED21fRW1PZmZsaW5lVGlt
        ZQ5tX0VtRXZlck9ubGluZQdtX1BmTmV3B21fUGZIb3QObV9QZlNob3dPbmxpbmUObV9QZk9ubGluZVRp
        bWUPbV9QZk9mZmxpbmVUaW1lDm1fUGZFdmVyT25saW5lCm1fQmlnQ2xhc3MMbV9TbWFsbENsYXNzD21f
        U3ViU21hbGxDbGFzcxRtX0VtU2FsZXNJbmNyZW1lbnRhbBZtX0NvbW1pc3Npb25UZW1wbGF0ZUlEAAEB
        AAQBAQAABAEBAAAAAAEBAQEAAAEAAQcBAAABAAEAAAABBwAAAAAAAAAAAAABAQEAAAUINlN5c3RlbS5D
        b2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnlgMltbU3lzdGVtLlN0cmluZwMAAAABCDZTeXN0ZW0u
        Q29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFbW0NFcnAuRW1Db3N0dW1lUGhvdG8EAAAABQUFAggICAIB
        DQEBBQUCDQgNAQEBAQ0NAQgIAgAAAAEwCgoAAAAACgoKAAAAAAAKBgUAAAAACQUAAAABMAEwATAACQUA
        AAAJBQAAAAkFAAAACQUAAAAAAAAAAAAAAAkFAAAA/////wkFAAAACgkFAAAAANPnZ8/JvNaICQUAAAAA
        CQUAAAAAATABMAkFAAAACtPnZ8/JvNaIAAAAANPnZ8/JvNaIAAAAANPnZ8/JvNaI0+dnz8m81ogACgoK
        AAAAAAAAAAAL
</value>
  </data>
</root>